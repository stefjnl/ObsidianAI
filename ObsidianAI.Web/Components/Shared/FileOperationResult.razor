@using ObsidianAI.Web.Models
@inject IJSRuntime JSRuntime
@inject IConfiguration Configuration
@using System.Net

<div class="file-operation-result" role="status" aria-live="polite">
    <span class="result-icon" aria-hidden="true">
        @(Result != null ? "✓" : "✗")
    </span>
    <span class="result-message">
        @DisplayMessage
    </span>
    @if (HasPath)
    {
        <button class="btn view-file-btn" type="button" @onclick="OpenInObsidian" title="Open the file in Obsidian">
            [View file]
        </button>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public FileOperationData Result { get; set; } = new();

    private string VaultName => Configuration["Obsidian:VaultName"] ?? "obsidian-vault";

    private bool HasPath => !string.IsNullOrWhiteSpace(Result?.FilePath);

    private string DisplayMessage => Result != null ? $"{Result.Action}: {Result.FilePath}" : "No operation";

    private async Task OpenInObsidian()
    {
        if (HasPath)
        {
            var encodedVault = Uri.EscapeDataString(VaultName);
            var encodedPath = Uri.EscapeDataString(Result!.FilePath!);
            var obsidianUri = $"obsidian://open?vault={encodedVault}&file={encodedPath}";
            await JSRuntime.InvokeVoidAsync("openObsidianUri", obsidianUri);
        }
    }
}